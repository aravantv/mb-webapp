var _aravantv$mb_webapp$Main$updateWidget = F4(
	function (refIndex, msg, candidateIndex, model) {
		return _elm_lang$core$Native_Utils.eq(candidateIndex, refIndex) ? A2(_aravantv$mb_webapp$SelectableText$update, msg, model) : model;
	});
var _aravantv$mb_webapp$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'Add':
				return {
					uiToAdd: '',
					contents: {
						ctor: '::',
						_0: _aravantv$mb_webapp$SelectableText$initModel(model.uiToAdd),
						_1: model.contents
					}
				};
			case 'ChangeToAdd':
				return _elm_lang$core$Native_Utils.update(
					model,
					{uiToAdd: _p0._0});
			default:
				return _elm_lang$core$Native_Utils.update(
					model,
					{
						contents: A2(
							_elm_lang$core$List$indexedMap,
							A2(_aravantv$mb_webapp$Main$updateWidget, _p0._0, _p0._1),
							model.contents)
					});
		}
	});
var _aravantv$mb_webapp$Main$model = {
	uiToAdd: '',
	contents: {ctor: '[]'}
};
var _aravantv$mb_webapp$Main$Model = F2(
	function (a, b) {
		return {uiToAdd: a, contents: b};
	});
var _aravantv$mb_webapp$Main$WidgetMsg = F2(
	function (a, b) {
		return {ctor: 'WidgetMsg', _0: a, _1: b};
	});
var _aravantv$mb_webapp$Main$viewWidget = F2(
	function (i, m) {
		return A2(
			_elm_lang$html$Html$li,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$map,
					_aravantv$mb_webapp$Main$WidgetMsg(i),
					_aravantv$mb_webapp$SelectableText$view(m)),
				_1: {ctor: '[]'}
			});
	});
var _aravantv$mb_webapp$Main$ChangeToAdd = function (a) {
	return {ctor: 'ChangeToAdd', _0: a};
};
var _aravantv$mb_webapp$Main$Add = {ctor: 'Add'};
var _aravantv$mb_webapp$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$input,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Events$onInput(_aravantv$mb_webapp$Main$ChangeToAdd),
					_1: {
						ctor: '::',
						_0: _aravantv$mb_webapp$Utils$onKeyUp(
							{
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: _aravantv$mb_webapp$Utils$enterKey, _1: _aravantv$mb_webapp$Main$Add},
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$value(model.uiToAdd),
							_1: {ctor: '[]'}
						}
					}
				},
				{ctor: '[]'}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$ul,
					{ctor: '[]'},
					A2(_elm_lang$core$List$indexedMap, _aravantv$mb_webapp$Main$viewWidget, model.contents)),
				_1: {ctor: '[]'}
			}
		});
};
var _aravantv$mb_webapp$Main$main = _elm_lang$html$Html$beginnerProgram(
	{model: _aravantv$mb_webapp$Main$model, view: _aravantv$mb_webapp$Main$view, update: _aravantv$mb_webapp$Main$update})();
