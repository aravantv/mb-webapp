var _aravantv$mb_webapp$Main$enterKey = 13;
var _aravantv$mb_webapp$Main$onKeyUp = function (decoder) {
	return A2(
		_elm_lang$html$Html_Events$on,
		'keyup',
		A2(_elm_lang$core$Json_Decode$andThen, decoder, _elm_lang$html$Html_Events$keyCode));
};
var _aravantv$mb_webapp$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'Add':
				return {
					uiToAdd: '',
					contents: {
						ctor: '::',
						_0: _aravantv$mb_webapp$SelectableText$initModel(model.uiToAdd),
						_1: model.contents
					}
				};
			case 'ChangeToAdd':
				return _elm_lang$core$Native_Utils.update(
					model,
					{uiToAdd: _p0._0});
			default:
				return _elm_lang$core$Native_Utils.update(
					model,
					{
						contents: A2(
							_elm_lang$core$List$map,
							_aravantv$mb_webapp$SelectableText$update(_p0._0),
							model.contents)
					});
		}
	});
var _aravantv$mb_webapp$Main$model = {
	uiToAdd: '',
	contents: {ctor: '[]'}
};
var _aravantv$mb_webapp$Main$Model = F2(
	function (a, b) {
		return {uiToAdd: a, contents: b};
	});
var _aravantv$mb_webapp$Main$WidgetMsg = function (a) {
	return {ctor: 'WidgetMsg', _0: a};
};
var _aravantv$mb_webapp$Main$ChangeToAdd = function (a) {
	return {ctor: 'ChangeToAdd', _0: a};
};
var _aravantv$mb_webapp$Main$Add = {ctor: 'Add'};
var _aravantv$mb_webapp$Main$keyUpDecoder = function (n) {
	return _elm_lang$core$Native_Utils.eq(n, _aravantv$mb_webapp$Main$enterKey) ? _elm_lang$core$Json_Decode$succeed(_aravantv$mb_webapp$Main$Add) : _elm_lang$core$Json_Decode$fail('key useless for selectable text');
};
var _aravantv$mb_webapp$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$input,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Events$onInput(_aravantv$mb_webapp$Main$ChangeToAdd),
					_1: {
						ctor: '::',
						_0: _aravantv$mb_webapp$Main$onKeyUp(_aravantv$mb_webapp$Main$keyUpDecoder),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$value(model.uiToAdd),
							_1: {ctor: '[]'}
						}
					}
				},
				{ctor: '[]'}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$ul,
					{ctor: '[]'},
					A2(
						_elm_lang$core$List$map,
						function (x) {
							return A2(
								_elm_lang$html$Html$li,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$map,
										_aravantv$mb_webapp$Main$WidgetMsg,
										_aravantv$mb_webapp$SelectableText$view(x)),
									_1: {ctor: '[]'}
								});
						},
						model.contents)),
				_1: {ctor: '[]'}
			}
		});
};
var _aravantv$mb_webapp$Main$main = _elm_lang$html$Html$beginnerProgram(
	{model: _aravantv$mb_webapp$Main$model, view: _aravantv$mb_webapp$Main$view, update: _aravantv$mb_webapp$Main$update})();
